// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package k3sd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type K3SAgent struct {
	NetworkDevice        string   `protobuf:"bytes,1,opt,name=NetworkDevice,proto3" json:"NetworkDevice,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	ServerURL            string   `protobuf:"bytes,3,opt,name=ServerURL,proto3" json:"ServerURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *K3SAgent) Reset()         { *m = K3SAgent{} }
func (m *K3SAgent) String() string { return proto.CompactTextString(m) }
func (*K3SAgent) ProtoMessage()    {}
func (*K3SAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{0}
}

func (m *K3SAgent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K3SAgent.Unmarshal(m, b)
}
func (m *K3SAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K3SAgent.Marshal(b, m, deterministic)
}
func (m *K3SAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K3SAgent.Merge(m, src)
}
func (m *K3SAgent) XXX_Size() int {
	return xxx_messageInfo_K3SAgent.Size(m)
}
func (m *K3SAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_K3SAgent.DiscardUnknown(m)
}

var xxx_messageInfo_K3SAgent proto.InternalMessageInfo

func (m *K3SAgent) GetNetworkDevice() string {
	if m != nil {
		return m.NetworkDevice
	}
	return ""
}

func (m *K3SAgent) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *K3SAgent) GetServerURL() string {
	if m != nil {
		return m.ServerURL
	}
	return ""
}

type K3SAgentManagedId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *K3SAgentManagedId) Reset()         { *m = K3SAgentManagedId{} }
func (m *K3SAgentManagedId) String() string { return proto.CompactTextString(m) }
func (*K3SAgentManagedId) ProtoMessage()    {}
func (*K3SAgentManagedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ede974c0020f77, []int{1}
}

func (m *K3SAgentManagedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K3SAgentManagedId.Unmarshal(m, b)
}
func (m *K3SAgentManagedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K3SAgentManagedId.Marshal(b, m, deterministic)
}
func (m *K3SAgentManagedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K3SAgentManagedId.Merge(m, src)
}
func (m *K3SAgentManagedId) XXX_Size() int {
	return xxx_messageInfo_K3SAgentManagedId.Size(m)
}
func (m *K3SAgentManagedId) XXX_DiscardUnknown() {
	xxx_messageInfo_K3SAgentManagedId.DiscardUnknown(m)
}

var xxx_messageInfo_K3SAgentManagedId proto.InternalMessageInfo

func (m *K3SAgentManagedId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*K3SAgent)(nil), "k3sd.K3SAgent")
	proto.RegisterType((*K3SAgentManagedId)(nil), "k3sd.K3SAgentManagedId")
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_56ede974c0020f77) }

var fileDescriptor_56ede974c0020f77 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4c, 0x4f, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x36, 0x2e, 0x4e, 0x51, 0x4a, 0xe1,
	0xe2, 0xf0, 0x36, 0x0e, 0x76, 0x04, 0x89, 0x0b, 0xa9, 0x70, 0xf1, 0xfa, 0xa5, 0x96, 0x94, 0xe7,
	0x17, 0x65, 0xbb, 0xa4, 0x96, 0x65, 0x26, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xa1,
	0x0a, 0x0a, 0x89, 0x70, 0xb1, 0x86, 0xe4, 0x67, 0xa7, 0xe6, 0x49, 0x30, 0x81, 0x65, 0x21, 0x1c,
	0x21, 0x19, 0x2e, 0xce, 0xe0, 0xd4, 0xa2, 0xb2, 0xd4, 0xa2, 0xd0, 0x20, 0x1f, 0x09, 0x66, 0xb0,
	0x0c, 0x42, 0x40, 0x49, 0x99, 0x4b, 0x10, 0x66, 0x8b, 0x6f, 0x62, 0x5e, 0x62, 0x7a, 0x6a, 0x8a,
	0x67, 0x8a, 0x10, 0x1f, 0x17, 0x93, 0x67, 0x0a, 0xd4, 0x0e, 0x26, 0xcf, 0x14, 0x23, 0x37, 0x2e,
	0x7e, 0x54, 0x45, 0x45, 0x42, 0xc6, 0x5c, 0x6c, 0xce, 0x45, 0xa9, 0x89, 0x25, 0xa9, 0x42, 0x7c,
	0x7a, 0x20, 0xe7, 0xea, 0xc1, 0x14, 0x48, 0x89, 0xa3, 0xf2, 0xe1, 0xa6, 0x2a, 0x31, 0x24, 0xb1,
	0x81, 0xfd, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x3e, 0xef, 0xc4, 0xee, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// K3SAgentManagerClient is the client API for K3SAgentManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type K3SAgentManagerClient interface {
	Create(ctx context.Context, in *K3SAgent, opts ...grpc.CallOption) (*K3SAgentManagedId, error)
}

type k3SAgentManagerClient struct {
	cc *grpc.ClientConn
}

func NewK3SAgentManagerClient(cc *grpc.ClientConn) K3SAgentManagerClient {
	return &k3SAgentManagerClient{cc}
}

func (c *k3SAgentManagerClient) Create(ctx context.Context, in *K3SAgent, opts ...grpc.CallOption) (*K3SAgentManagedId, error) {
	out := new(K3SAgentManagedId)
	err := c.cc.Invoke(ctx, "/k3sd.K3SAgentManager/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// K3SAgentManagerServer is the server API for K3SAgentManager service.
type K3SAgentManagerServer interface {
	Create(context.Context, *K3SAgent) (*K3SAgentManagedId, error)
}

// UnimplementedK3SAgentManagerServer can be embedded to have forward compatible implementations.
type UnimplementedK3SAgentManagerServer struct {
}

func (*UnimplementedK3SAgentManagerServer) Create(ctx context.Context, req *K3SAgent) (*K3SAgentManagedId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterK3SAgentManagerServer(s *grpc.Server, srv K3SAgentManagerServer) {
	s.RegisterService(&_K3SAgentManager_serviceDesc, srv)
}

func _K3SAgentManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(K3SAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(K3SAgentManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/k3sd.K3SAgentManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(K3SAgentManagerServer).Create(ctx, req.(*K3SAgent))
	}
	return interceptor(ctx, in, info, handler)
}

var _K3SAgentManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "k3sd.K3SAgentManager",
	HandlerType: (*K3SAgentManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _K3SAgentManager_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}
