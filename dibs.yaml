targets:
  - name: k3sd-linux
    platforms:
      - identifier: linux/amd64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sd
          assetOut: .bin/binaries/k3sd/k3sd-linux-amd64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=amd64 go generate ./...
          build: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sd/k3sd-linux-amd64 cmd/k3sd/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sd/k3sd-linux-amd64 --help
          start: .bin/binaries/k3sd/k3sd-linux-amd64
        docker:
          build:
            file: Dockerfile.k3sd
            context: .
            tag: pojntfx/k3sd:linux-amd64
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sd-unit-tests:linux-amd64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sd-integration-tests:linux-amd64
      - identifier: linux/arm64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sd
          assetOut: .bin/binaries/k3sd/k3sd-linux-arm64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=arm64 go generate ./...
          build: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sd/k3sd-linux-arm64 cmd/k3sd/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sd/k3sd-linux-arm64 --help
          start: .bin/binaries/k3sd/k3sd-linux-arm64
        docker:
          build:
            file: Dockerfile.k3sd
            context: .
            tag: pojntfx/k3sd:linux-arm64
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sd-unit-tests:linux-arm64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sd-integration-tests:linux-arm64
  - name: k3sserverctl-linux
    platforms:
      - identifier: linux/amd64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sserverctl
          assetOut: .bin/binaries/k3sserverctl/k3sserverctl-linux-amd64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=amd64 go generate ./...
          build: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sserverctl/k3sserverctl-linux-amd64 cmd/k3sserverctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sserverctl/k3sserverctl-linux-amd64 --help
          start: .bin/binaries/k3sserverctl/k3sserverctl-linux-amd64 --help
        docker:
          build:
            file: Dockerfile.k3sserverctl
            context: .
            tag: pojntfx/k3sserverctl:linux-amd64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sserverctl-unit-tests:linux-amd64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sserverctl-integration-tests:linux-amd64
      - identifier: linux/arm64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sserverctl
          assetOut: .bin/binaries/k3sserverctl/k3sserverctl-linux-arm64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=arm64 go generate ./...
          build: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sserverctl/k3sserverctl-linux-arm64 cmd/k3sserverctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sserverctl/k3sserverctl-linux-arm64 --help
          start: .bin/binaries/k3sserverctl/k3sserverctl-linux-arm64 --help
        docker:
          build:
            file: Dockerfile.k3sserverctl
            context: .
            tag: pojntfx/k3sserverctl:linux-arm64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sserverctl-unit-tests:linux-arm64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sserverctl-integration-tests:linux-arm64
  - name: k3sserverctl-darwin
    platforms:
      - identifier: darwin/amd64
        paths:
          watch: .
          include: (.*)\.go
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=amd64 go generate ./...
          build: GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sserverctl/k3sserverctl-darwin-amd64 cmd/k3sserverctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sserverctl/k3sserverctl-darwin-amd64 --help
          start: .bin/binaries/k3sserverctl/k3sserverctl-darwin-amd64 --help
  - name: k3sagentctl-linux
    platforms:
      - identifier: linux/amd64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sagentctl
          assetOut: .bin/binaries/k3sagentctl/k3sagentctl-linux-amd64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=amd64 go generate ./...
          build: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sagentctl/k3sagentctl-linux-amd64 cmd/k3sagentctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sagentctl/k3sagentctl-linux-amd64 --help
          start: .bin/binaries/k3sagentctl/k3sagentctl-linux-amd64 --help
        docker:
          build:
            file: Dockerfile.k3sagentctl
            context: .
            tag: pojntfx/k3sagentctl:linux-amd64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sagentctl-unit-tests:linux-amd64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sagentctl-integration-tests:linux-amd64
      - identifier: linux/arm64
        paths:
          watch: .
          include: (.*)\.go
          assetInImage: /usr/local/bin/k3sagentctl
          assetOut: .bin/binaries/k3sagentctl/k3sagentctl-linux-arm64
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=arm64 go generate ./...
          build: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sagentctl/k3sagentctl-linux-arm64 cmd/k3sagentctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sagentctl/k3sagentctl-linux-arm64 --help
          start: .bin/binaries/k3sagentctl/k3sagentctl-linux-arm64 --help
        docker:
          build:
            file: Dockerfile.k3sagentctl
            context: .
            tag: pojntfx/k3sagentctl:linux-arm64 # Only to get the binaries from Docker
          unitTests:
            file: Dockerfile.unitTests
            context: .
            tag: pojntfx/k3sagentctl-unit-tests:linux-arm64
          integrationTests:
            file: Dockerfile.integrationTests
            context: .
            tag: pojntfx/k3sagentctl-integration-tests:linux-arm64
  - name: k3sagentctl-darwin
    platforms:
      - identifier: darwin/amd64
        paths:
          watch: .
          include: (.*)\.go
          gitRepoRoot: .
        commands:
          generateSources: GOARCH=amd64 go generate ./...
          build: GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -tags netgo -ldflags '-extldflags "-static"' -o .bin/binaries/k3sagentctl/k3sagentctl-darwin-amd64 cmd/k3sagentctl/main.go
          unitTests: go test -v ./...
          integrationTests: .bin/binaries/k3sagentctl/k3sagentctl-darwin-amd64 --help
          start: .bin/binaries/k3sagentctl/k3sagentctl-darwin-amd64 --help
